// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.924
package uptime

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"the-ark/views/components/button"
	"the-ark/views/components/card"
)

func AddSiteModal() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Var3 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
				templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
				templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
				if !templ_7745c5c3_IsBuffer {
					defer func() {
						templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
						if templ_7745c5c3_Err == nil {
							templ_7745c5c3_Err = templ_7745c5c3_BufErr
						}
					}()
				}
				ctx = templ.InitializeContext(ctx)
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<div class=\"flex items-center justify-between\"><h3 class=\"text-lg font-semibold text-gray-900 dark:text-white\">Add New Site</h3><button class=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\" onclick=\"document.getElementById('add-site-modal').innerHTML = ''\">âœ•</button></div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				return nil
			})
			templ_7745c5c3_Err = card.Header().Render(templ.WithChildren(ctx, templ_7745c5c3_Var3), templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, " ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Var4 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
				templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
				templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
				if !templ_7745c5c3_IsBuffer {
					defer func() {
						templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
						if templ_7745c5c3_Err == nil {
							templ_7745c5c3_Err = templ_7745c5c3_BufErr
						}
					}()
				}
				ctx = templ.InitializeContext(ctx)
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<!-- Debug info --> <div class=\"text-xs text-gray-500 mb-4\">Modal loaded successfully</div><form id=\"add-site-form\" class=\"space-y-4\" onsubmit=\"console.log('Form onsubmit fired'); return false;\"><!-- HTMX indicator --><div id=\"form-indicator\" class=\"htmx-indicator text-blue-600\">Submitting...</div><div><label for=\"name\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Site Name</label> <input type=\"text\" id=\"name\" name=\"name\" required class=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\" placeholder=\"e.g., My Website\"></div><div><label for=\"url\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">URL</label> <input type=\"url\" id=\"url\" name=\"url\" required class=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\" placeholder=\"https://example.com\"></div><div><label for=\"check_interval\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Check Interval (minutes)</label> <select id=\"check_interval\" name=\"check_interval\" class=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\"><option value=\"60\">1 minute</option> <option value=\"300\" selected>5 minutes</option> <option value=\"900\">15 minutes</option> <option value=\"1800\">30 minutes</option> <option value=\"3600\">1 hour</option></select></div><div class=\"flex space-x-3 pt-4\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Var5 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
					templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
					templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
					if !templ_7745c5c3_IsBuffer {
						defer func() {
							templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
							if templ_7745c5c3_Err == nil {
								templ_7745c5c3_Err = templ_7745c5c3_BufErr
							}
						}()
					}
					ctx = templ.InitializeContext(ctx)
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "Cancel")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					return nil
				})
				templ_7745c5c3_Err = button.Button(button.Props{
					Variant: button.VariantOutline,
					Size:    button.SizeSm,
					Class:   "flex-1 border-gray-200 dark:border-gray-600 text-gray-900 dark:text-white hover:bg-gray-50 dark:hover:bg-gray-700",
					Attributes: templ.Attributes{
						"type":    "button",
						"onclick": "document.getElementById('add-site-modal').innerHTML = ''",
					},
				}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var5), templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Var6 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
					templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
					templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
					if !templ_7745c5c3_IsBuffer {
						defer func() {
							templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
							if templ_7745c5c3_Err == nil {
								templ_7745c5c3_Err = templ_7745c5c3_BufErr
							}
						}()
					}
					ctx = templ.InitializeContext(ctx)
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "Add Site")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					return nil
				})
				templ_7745c5c3_Err = button.Button(button.Props{
					Variant: button.VariantDefault,
					Size:    button.SizeSm,
					Class:   "flex-1 bg-blue-600 hover:bg-blue-700 text-white",
					Attributes: templ.Attributes{
						"type":                 "button",
						"hx-post":              "/uptime/api/websites",
						"hx-target":            "#add-site-modal",
						"hx-swap":              "none",
						"hx-indicator":         "#form-indicator",
						"hx-include":           "#add-site-form",
						"hx-on::after-request": "if(event.detail.xhr.status === 200) { try { const response = JSON.parse(event.detail.xhr.responseText); if(response.success) { window.location.href = '/uptime'; } } catch(e) { console.error('Failed to parse response:', e); } }",
						"onclick":              "console.log('Submit button clicked');",
					},
				}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var6), templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "</div></form>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				return nil
			})
			templ_7745c5c3_Err = card.Content().Render(templ.WithChildren(ctx, templ_7745c5c3_Var4), templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = card.Card(card.Props{
			Class: "w-full max-w-md mx-4 border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800",
		}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "</div><script>\n\t\t// Debug HTMX\n\t\tconsole.log('Modal loaded, checking HTMX...');\n\t\tif (typeof htmx !== 'undefined') {\n\t\t\tconsole.log('HTMX is loaded');\n\t\t\t\n\t\t\t// Add event listener to form\n\t\t\tconst form = document.querySelector('form');\n\t\t\tconsole.log('Form found:', form);\n\t\t\t\n\t\t\tform.addEventListener('submit', function(e) {\n\t\t\t\tconsole.log('Form submit event fired');\n\t\t\t\tconsole.log('Form action:', form.action);\n\t\t\t\tconsole.log('Form method:', form.method);\n\t\t\t\tconsole.log('Form has hx-post:', form.hasAttribute('hx-post'));\n\t\t\t});\n\t\t\t\n\t\t\t// Listen for HTMX events\n\t\t\tdocument.body.addEventListener('htmx:beforeRequest', function(e) {\n\t\t\t\tconsole.log('HTMX beforeRequest:', e.detail);\n\t\t\t\tconsole.log('Request URL:', e.detail.requestConfig.path);\n\t\t\t});\n\t\t\t\n\t\t\tdocument.body.addEventListener('htmx:afterRequest', function(e) {\n\t\t\t\tconsole.log('HTMX afterRequest:', e.detail);\n\t\t\t\tconsole.log('Response status:', e.detail.xhr.status);\n\t\t\t});\n\t\t\t\n\t\t\tdocument.body.addEventListener('htmx:sendError', function(e) {\n\t\t\t\tconsole.log('HTMX sendError:', e.detail);\n\t\t\t});\n\t\t} else {\n\t\t\tconsole.log('HTMX is NOT loaded');\n\t\t}\n\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
