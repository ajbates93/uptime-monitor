package rss

import (
    "the-ark/internal/auth"
    "the-ark/views/components/navigation"
    "the-ark/views/components/button"
    "the-ark/views/layouts"
)

templ RSSDashboard() {
    @layouts.BaseLayout(layouts.BaseLayoutProps{
        Title: "The Ark - RSS Reader",
        Description: "Personal RSS feed reader",
    }) {
        <div class="min-h-screen flex">
            <!-- Sidebar -->
            @navigation.Navigation(navigation.Props{
                User: auth.AnonymousUser,
                ActivePage: "rss",
            })

            <!-- Main Content -->
            <main class="flex-1 p-8">
                <header class="mb-8">
                    <div class="flex items-center justify-between">
                        <div>
                            <h2 class="text-3xl font-bold text-gray-900 dark:text-white">RSS Reader</h2>
                            <p class="text-sm text-gray-500 dark:text-gray-400 mt-1">Manage your feeds and read articles</p>
                        </div>
                        <div class="flex items-center space-x-3">
                            @button.Button(button.Props{
                                Variant: button.VariantDefault,
                                Size: button.SizeSm,
                                Class: "bg-blue-600 hover:bg-blue-700 text-white",
                                Attributes: templ.Attributes{
                                    "onclick": "openAddFeedModal()",
                                },
                            }) { + Add Feed }
                            @button.Button(button.Props{
                                Variant: button.VariantOutline,
                                Size: button.SizeSm,
                                Class: "border-gray-200 dark:border-gray-600 text-gray-900 dark:text-white hover:bg-gray-50 dark:hover:bg-gray-700",
                                Attributes: templ.Attributes{
                                    "onclick": "refreshFeeds()",
                                },
                            }) { Refresh All }
                        </div>
                    </div>
                </header>
				<!-- Header -->
				<div class="grid grid-cols-1 lg:grid-cols-4 gap-8">
						<!-- Sidebar - Feed List -->
						<div class="lg:col-span-1">
						<div class="bg-white dark:bg-gray-800 shadow rounded-lg p-6 border border-gray-200 dark:border-gray-700">
								<h2 class="text-lg font-medium text-gray-900 dark:text-white mb-4">Feeds</h2>
								<div class="space-y-2" id="feed-list">
									<!-- Feeds will be loaded here -->
									<div class="text-gray-500 dark:text-gray-400 text-sm">Loading feeds...</div>
								</div>
							</div>
						</div>

						<!-- Main Content - Articles -->
						<div class="lg:col-span-3">
							<div class="bg-white dark:bg-gray-800 shadow rounded-lg border border-gray-200 dark:border-gray-700">
								<!-- Article List Header -->
								<div class="px-6 py-4 border-b border-gray-200 dark:border-gray-700">
									<div class="flex justify-between items-center">
										<h2 class="text-lg font-medium text-gray-900 dark:text-white">Articles</h2>
										<div class="flex items-center space-x-4">
											<select id="sort-select" class="text-sm border-gray-300 dark:border-gray-600 rounded-md">
												<option value="published_at_desc">Newest First</option>
												<option value="published_at_asc">Oldest First</option>
												<option value="title_asc">Title A-Z</option>
												<option value="title_desc">Title Z-A</option>
											</select>
											<button
												type="button"
												id="refresh-btn"
                  								class="inline-flex items-center gap-2 text-sm text-gray-700 hover:text-gray-900 dark:text-gray-300 dark:hover:text-gray-100"
												onclick="refreshFeeds()"
											>
                  								<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
													<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
												</svg>
                                        <span>Refresh all</span>
											</button>
										</div>
									</div>
								</div>

								<!-- Article List -->
								<div class="divide-y divide-gray-200 dark:divide-gray-700" id="article-list">
									<!-- Articles will be loaded here -->
									<div class="px-6 py-8 text-center text-gray-500 dark:text-gray-400">
										<svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
											<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z"></path>
										</svg>
										<h3 class="mt-2 text-sm font-medium text-gray-900 dark:text-white">No articles</h3>
										<p class="mt-1 text-sm text-gray-500 dark:text-gray-400">Get started by adding an RSS feed.</p>
									</div>
								</div>
							</div>
						</div>
					</div>
				</main>
			</div>

			<!-- Add Feed Modal -->
			<div id="add-feed-modal" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50">
				<div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white dark:bg-gray-800">
					<div class="mt-3">
						<h3 class="text-lg font-medium text-gray-900 dark:text-white mb-4">Add New RSS Feed</h3>
						<form id="add-feed-form" class="space-y-4">
							<div>
								<label for="feed-url" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Feed URL</label>
								<input
									type="url"
									id="feed-url"
									name="url"
									required
									class="mt-1 block w-full border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white"
									placeholder="https://example.com/feed.xml"
								>
							</div>
							<div>
								<label for="feed-title" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Title (optional)</label>
								<input
									type="text"
									id="feed-title"
									name="title"
									class="mt-1 block w-full border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white"
									placeholder="Feed title will be auto-detected"
								>
							</div>
							<div>
								<label for="fetch-interval" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Update Interval</label>
								<select
									id="fetch-interval"
									name="fetch_interval"
									class="mt-1 block w-full border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white"
								>
									<option value="300">5 minutes</option>
									<option value="900">15 minutes</option>
									<option value="1800">30 minutes</option>
									<option value="3600" selected>1 hour</option>
									<option value="7200">2 hours</option>
									<option value="14400">4 hours</option>
									<option value="86400">1 day</option>
								</select>
							</div>
							<div class="flex justify-end space-x-3">
								<button
									type="button"
									onclick="closeAddFeedModal()"
									class="px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-md hover:bg-gray-200 dark:hover:bg-gray-600"
								>
									Cancel
								</button>
								<button
									type="submit"
									class="px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
								>
									Add Feed
								</button>
							</div>
						</form>
					</div>
				</div>
				</div>

				<script>
				// Modal functions
				function openAddFeedModal() {
					document.getElementById('add-feed-modal').classList.remove('hidden');
				}

				function closeAddFeedModal() {
					document.getElementById('add-feed-modal').classList.add('hidden');
				}

				// Form submission
				document.getElementById('add-feed-form').addEventListener('submit', async function(e) {
					e.preventDefault();
					
					const formData = new FormData(this);
					const data = {
						url: formData.get('url'),
						title: formData.get('title') || '',
						fetch_interval: parseInt(formData.get('fetch_interval'))
					};

					try {
						const response = await fetch('/rss/feeds', {
							method: 'POST',
							headers: {
								'Content-Type': 'application/json',
							},
							body: JSON.stringify(data)
						});

						if (response.ok) {
							closeAddFeedModal();
							loadFeeds();
							loadArticles();
						} else {
							alert('Failed to add feed');
						}
					} catch (error) {
						console.error('Error:', error);
						alert('Failed to add feed');
					}
				});

				// Load feeds and articles on page load
				document.addEventListener('DOMContentLoaded', function() {
					loadFeeds();
					loadArticles();
				});

				// Load feeds
				async function loadFeeds() {
					try {
						const response = await fetch('/rss/feeds');
						if (response.ok) {
							const feeds = await response.json();
							displayFeeds(feeds);
						}
					} catch (error) {
						console.error('Error loading feeds:', error);
					}
				}

				// Display feeds
				function displayFeeds(feeds) {
					const feedList = document.getElementById('feed-list');
					if (feeds.length === 0) {
						feedList.innerHTML = '<div class="text-gray-500 dark:text-gray-400 text-sm">No feeds added yet</div>';
						return;
					}

						feedList.innerHTML = feeds.map(feed => `
							<div class="flex items-center justify-between p-3 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 cursor-pointer" onclick="selectFeed(${feed.id})">
								<div class="flex items-center space-x-3 min-w-0">
									<div class="w-3 h-3 rounded-full ${feed.enabled ? 'bg-green-500' : 'bg-gray-400'}"></div>
									<div class="min-w-0">
										<div class="text-sm font-medium text-gray-900 dark:text-white truncate">${feed.title || 'Untitled Feed'}</div>
										<div class="text-xs text-gray-500 dark:text-gray-400 break-all">${feed.url}</div>
									</div>
								</div>
							</div>
						`).join('');
				}

				// Load articles
				async function loadArticles(feedId = null) {
					try {
						let url = '/rss/articles?limit=50&offset=0&sort_by=published_at&sort_order=desc';
						if (feedId) {
							url += `&feed_id=${feedId}`;
						}

						const response = await fetch(url);
						if (response.ok) {
							const articles = await response.json();
							displayArticles(articles);
						}
					} catch (error) {
						console.error('Error loading articles:', error);
					}
				}

				// Display articles
				function displayArticles(articles) {
					const articleList = document.getElementById('article-list');
					if (articles.length === 0) {
						articleList.innerHTML = `
							<div class="px-6 py-8 text-center text-gray-500 dark:text-gray-400">
								<svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z"></path>
								</svg>
								<h3 class="mt-2 text-sm font-medium text-gray-900 dark:text-white">No articles</h3>
								<p class="mt-1 text-sm text-gray-500 dark:text-gray-400">No articles found.</p>
							</div>
						`;
						return;
					}

					articleList.innerHTML = articles.map(article => `
						<div class="px-6 py-4 hover:bg-gray-50 dark:hover:bg-gray-700">
							<div class="flex items-start space-x-3">
								<div class="flex-shrink-0">
									<button
										onclick="toggleStar(${article.id})"
										class="text-gray-400 hover:text-yellow-500 ${article.is_starred ? 'text-yellow-500' : ''}"
									>
										<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
											<path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
										</svg>
									</button>
								</div>
								<div class="flex-1 min-w-0">
									<div class="flex items-center space-x-2">
										<h3 class="text-sm font-medium text-gray-900 dark:text-white">
											<a href="${article.link}" target="_blank" class="hover:underline">${article.title}</a>
										</h3>
										${article.is_read ? '<span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-green-100 text-green-800">Read</span>' : ''}
									</div>
									<p class="mt-1 text-sm text-gray-500 dark:text-gray-400 line-clamp-2">${article.description || ''}</p>
									<div class="mt-2 flex items-center space-x-4 text-xs text-gray-500 dark:text-gray-400">
										${article.author ? '&lt;span&gt;By ' + article.author + '&lt;/span&gt;' : ''}
										${article.published_at ? '&lt;span&gt;' + new Date(article.published_at).toLocaleDateString() + '&lt;/span&gt;' : ''}
									</div>
								</div>
							</div>
						</div>
					`).join('');
				}

				// Select feed
				function selectFeed(feedId) {
					loadArticles(feedId);
				}

				// Toggle star
				async function toggleStar(articleId) {
					try {
						const response = await fetch(`/rss/articles/${articleId}/star`, {
							method: 'PUT'
						});
						if (response.ok) {
							loadArticles(); // Reload articles to show updated state
						}
					} catch (error) {
						console.error('Error toggling star:', error);
					}
				}

				// Refresh feeds
				async function refreshFeeds() {
					try {
						const response = await fetch('/rss/feeds/refresh', {
							method: 'POST'
						});
						if (response.ok) {
							loadFeeds();
							loadArticles();
						}
					} catch (error) {
						console.error('Error refreshing feeds:', error);
					}
				}
				</script>
    }
} 