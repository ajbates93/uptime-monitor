// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.924
package rss

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"the-ark/internal/auth"
	"the-ark/views/components/button"
	"the-ark/views/components/navigation"
	"the-ark/views/layouts"
)

func RSSDashboard() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"min-h-screen flex\"><!-- Sidebar -->")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = navigation.Navigation(navigation.Props{
				User:       auth.AnonymousUser,
				ActivePage: "rss",
			}).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<!-- Main Content --><main class=\"flex-1 p-8\"><header class=\"mb-8\"><div class=\"flex items-center justify-between\"><div><h2 class=\"text-3xl font-bold text-gray-900 dark:text-white\">RSS Reader</h2><p class=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">Manage your feeds and read articles</p></div><div class=\"flex items-center space-x-3\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Var3 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
				templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
				templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
				if !templ_7745c5c3_IsBuffer {
					defer func() {
						templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
						if templ_7745c5c3_Err == nil {
							templ_7745c5c3_Err = templ_7745c5c3_BufErr
						}
					}()
				}
				ctx = templ.InitializeContext(ctx)
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "+ Add Feed ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				return nil
			})
			templ_7745c5c3_Err = button.Button(button.Props{
				Variant: button.VariantDefault,
				Size:    button.SizeSm,
				Class:   "bg-blue-600 hover:bg-blue-700 text-white",
				Attributes: templ.Attributes{
					"onclick": "openAddFeedModal()",
				},
			}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var3), templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Var4 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
				templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
				templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
				if !templ_7745c5c3_IsBuffer {
					defer func() {
						templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
						if templ_7745c5c3_Err == nil {
							templ_7745c5c3_Err = templ_7745c5c3_BufErr
						}
					}()
				}
				ctx = templ.InitializeContext(ctx)
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "Refresh All ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				return nil
			})
			templ_7745c5c3_Err = button.Button(button.Props{
				Variant: button.VariantOutline,
				Size:    button.SizeSm,
				Class:   "border-gray-200 dark:border-gray-600 text-gray-900 dark:text-white hover:bg-gray-50 dark:hover:bg-gray-700",
				Attributes: templ.Attributes{
					"onclick": "refreshFeeds()",
				},
			}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var4), templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "</div></div></header><!-- Header --><div class=\"grid grid-cols-1 lg:grid-cols-4 gap-8\"><!-- Sidebar - Feed List --><div class=\"lg:col-span-1\"><div class=\"bg-white dark:bg-gray-800 shadow rounded-lg p-6 border border-gray-200 dark:border-gray-700\"><h2 class=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">Feeds</h2><div class=\"space-y-2\" id=\"feed-list\"><!-- Feeds will be loaded here --><div class=\"text-gray-500 dark:text-gray-400 text-sm\">Loading feeds...</div></div></div></div><!-- Main Content - Articles --><div class=\"lg:col-span-3\"><div class=\"bg-white dark:bg-gray-800 shadow rounded-lg border border-gray-200 dark:border-gray-700\"><!-- Article List Header --><div class=\"px-6 py-4 border-b border-gray-200 dark:border-gray-700\"><div class=\"flex justify-between items-center\"><h2 class=\"text-lg font-medium text-gray-900 dark:text-white\">Articles</h2><div class=\"flex items-center space-x-4\"><select id=\"sort-select\" class=\"text-sm border-gray-300 dark:border-gray-600 rounded-md\"><option value=\"published_at_desc\">Newest First</option> <option value=\"published_at_asc\">Oldest First</option> <option value=\"title_asc\">Title A-Z</option> <option value=\"title_desc\">Title Z-A</option></select> <button type=\"button\" id=\"refresh-btn\" class=\"inline-flex items-center gap-2 text-sm text-gray-700 hover:text-gray-900 dark:text-gray-300 dark:hover:text-gray-100\" onclick=\"refreshFeeds()\"><svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"></path></svg> <span>Refresh all</span></button></div></div></div><!-- Article List --><div class=\"divide-y divide-gray-200 dark:divide-gray-700\" id=\"article-list\"><!-- Articles will be loaded here --><div class=\"px-6 py-8 text-center text-gray-500 dark:text-gray-400\"><svg class=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z\"></path></svg><h3 class=\"mt-2 text-sm font-medium text-gray-900 dark:text-white\">No articles</h3><p class=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">Get started by adding an RSS feed.</p></div></div></div></div></div></main></div><!-- Add Feed Modal --> <div id=\"add-feed-modal\" class=\"hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\"><div class=\"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white dark:bg-gray-800\"><div class=\"mt-3\"><h3 class=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">Add New RSS Feed</h3><form id=\"add-feed-form\" class=\"space-y-4\"><div><label for=\"feed-url\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Feed URL</label> <input type=\"url\" id=\"feed-url\" name=\"url\" required class=\"mt-1 block w-full border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\" placeholder=\"https://example.com/feed.xml\"></div><div><label for=\"feed-title\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Title (optional)</label> <input type=\"text\" id=\"feed-title\" name=\"title\" class=\"mt-1 block w-full border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\" placeholder=\"Feed title will be auto-detected\"></div><div><label for=\"fetch-interval\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Update Interval</label> <select id=\"fetch-interval\" name=\"fetch_interval\" class=\"mt-1 block w-full border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\"><option value=\"300\">5 minutes</option> <option value=\"900\">15 minutes</option> <option value=\"1800\">30 minutes</option> <option value=\"3600\" selected>1 hour</option> <option value=\"7200\">2 hours</option> <option value=\"14400\">4 hours</option> <option value=\"86400\">1 day</option></select></div><div class=\"flex justify-end space-x-3\"><button type=\"button\" onclick=\"closeAddFeedModal()\" class=\"px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-md hover:bg-gray-200 dark:hover:bg-gray-600\">Cancel</button> <button type=\"submit\" class=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\">Add Feed</button></div></form></div></div></div><!-- Edit Feed Modal --> <div id=\"edit-feed-modal\" class=\"hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\"><div class=\"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white dark:bg-gray-800\"><div class=\"mt-3\"><h3 class=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">Edit Feed</h3><form id=\"edit-feed-form\" class=\"space-y-4\"><input type=\"hidden\" id=\"edit-feed-id\"><div><label for=\"edit-feed-title\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Title</label> <input type=\"text\" id=\"edit-feed-title\" name=\"title\" class=\"mt-1 block w-full border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\" placeholder=\"Feed title\"></div><div><label for=\"edit-fetch-interval\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Update Interval</label> <select id=\"edit-fetch-interval\" name=\"fetch_interval\" class=\"mt-1 block w-full border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\"><option value=\"300\">5 minutes</option> <option value=\"900\">15 minutes</option> <option value=\"1800\">30 minutes</option> <option value=\"3600\">1 hour</option> <option value=\"7200\">2 hours</option> <option value=\"14400\">4 hours</option> <option value=\"86400\">1 day</option></select></div><div class=\"flex items-center space-x-2\"><input id=\"edit-enabled\" name=\"enabled\" type=\"checkbox\" class=\"h-4 w-4 text-blue-600 border-gray-300 rounded\"> <label for=\"edit-enabled\" class=\"text-sm text-gray-700 dark:text-gray-300\">Enabled</label></div><div class=\"flex justify-end space-x-3\"><button type=\"button\" onclick=\"closeEditFeedModal()\" class=\"px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-md hover:bg-gray-200 dark:hover:bg-gray-600\">Cancel</button> <button type=\"submit\" class=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\">Save Changes</button></div></form></div></div></div><script>\n\t\t\t\t\t// Utility: safe HTML escaping using the DOM\n\t\t\t\t\tfunction escapeHtml(str) {\n\t\t\t\t\t\tconst el = document.createElement('div');\n\t\t\t\t\t\tel.textContent = String(str);\n\t\t\t\t\t\treturn el.innerHTML;\n\t\t\t\t\t}\n\t\t\t\t// Modal functions\n\t\t\t\tfunction openAddFeedModal() {\n\t\t\t\t\tdocument.getElementById('add-feed-modal').classList.remove('hidden');\n\t\t\t\t}\n\n\t\t\t\tfunction closeAddFeedModal() {\n\t\t\t\t\tdocument.getElementById('add-feed-modal').classList.add('hidden');\n\t\t\t\t}\n\n\t\t\t\t// Form submission\n\t\t\t\tdocument.getElementById('add-feed-form').addEventListener('submit', async function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\n\t\t\t\t\tconst formData = new FormData(this);\n\t\t\t\t\tconst data = {\n\t\t\t\t\t\turl: formData.get('url'),\n\t\t\t\t\t\ttitle: formData.get('title') || '',\n\t\t\t\t\t\tfetch_interval: parseInt(formData.get('fetch_interval'))\n\t\t\t\t\t};\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst response = await fetch('/rss/feeds', {\n\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tbody: JSON.stringify(data)\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (response.ok) {\n\t\t\t\t\t\t\tcloseAddFeedModal();\n\t\t\t\t\t\t\tloadFeeds();\n\t\t\t\t\t\t\tloadArticles();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\talert('Failed to add feed');\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error('Error:', error);\n\t\t\t\t\t\talert('Failed to add feed');\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Load feeds and articles on page load\n\t\t\t\tdocument.addEventListener('DOMContentLoaded', function() {\n\t\t\t\t\tloadFeeds();\n\t\t\t\t\tloadArticles();\n\t\t\t\t});\n\n\t\t\t\t// Load feeds\n\t\t\t\tasync function loadFeeds() {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst response = await fetch('/rss/feeds');\n\t\t\t\t\t\tif (response.ok) {\n\t\t\t\t\t\t\tconst feeds = await response.json();\n\t\t\t\t\t\t\tdisplayFeeds(feeds);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error('Error loading feeds:', error);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Display feeds\n\t\t\t\tfunction displayFeeds(feeds) {\n\t\t\t\t\tconst feedList = document.getElementById('feed-list');\n\t\t\t\t\tif (feeds.length === 0) {\n\t\t\t\t\t\tfeedList.innerHTML = '<div class=\"text-gray-500 dark:text-gray-400 text-sm\">No feeds added yet</div>';\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t\t// Store for later editing/deleting\n\t\t\t\t\t\twindow._feeds = feeds;\n\n\t\t\t\t\t\tfeedList.innerHTML = feeds.map(feed => `\n\t\t\t\t\t\t\t<div class=\"flex items-center justify-between p-3 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 cursor-pointer\" onclick=\"selectFeed(${feed.id})\">\n\t\t\t\t\t\t\t\t<div class=\"flex items-center space-x-3 min-w-0\">\n\t\t\t\t\t\t\t\t\t<div class=\"w-3 h-3 rounded-full ${feed.enabled ? 'bg-green-500' : 'bg-gray-400'}\"></div>\n\t\t\t\t\t\t\t\t\t<div class=\"min-w-0\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"text-sm font-medium text-gray-900 dark:text-white truncate\">${feed.title || 'Untitled Feed'}</div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"text-xs text-gray-500 dark:text-gray-400 break-all\">${feed.url}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"flex items-center space-x-2\">\n\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"text-xs px-2 py-1 rounded border border-gray-200 dark:border-gray-600 text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-600\" onclick=\"event.stopPropagation(); openEditFeedModal(${feed.id})\">Edit</button>\n\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"text-xs px-2 py-1 rounded border border-red-200 text-red-700 hover:bg-red-50 dark:border-red-700 dark:text-red-300 dark:hover:bg-red-900/20\" onclick=\"event.stopPropagation(); deleteFeed(${feed.id})\">Delete</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t`).join('');\n\t\t\t\t}\n\n\t\t\t\t// Load articles\n\t\t\t\tasync function loadArticles(feedId = null) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlet url = '/rss/articles?limit=50&offset=0&sort_by=published_at&sort_order=desc';\n\t\t\t\t\t\tif (feedId) {\n\t\t\t\t\t\t\turl += `&feed_id=${feedId}`;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst response = await fetch(url);\n\t\t\t\t\t\tif (response.ok) {\n\t\t\t\t\t\t\tconst articles = await response.json();\n\t\t\t\t\t\t\tdisplayArticles(articles);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error('Error loading articles:', error);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Display articles\n\t\t\t\tfunction displayArticles(articles) {\n\t\t\t\t\tconst articleList = document.getElementById('article-list');\n\t\t\t\t\tif (articles.length === 0) {\n\t\t\t\t\t\tarticleList.innerHTML = `\n\t\t\t\t\t\t\t<div class=\"px-6 py-8 text-center text-gray-500 dark:text-gray-400\">\n\t\t\t\t\t\t\t\t<svg class=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z\"></path>\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t<h3 class=\"mt-2 text-sm font-medium text-gray-900 dark:text-white\">No articles</h3>\n\t\t\t\t\t\t\t\t<p class=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">No articles found.</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t`;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t\tarticleList.innerHTML = articles.map(article => `\n\t\t\t\t\t\t<div class=\"px-6 py-4 hover:bg-gray-50 dark:hover:bg-gray-700\">\n\t\t\t\t\t\t\t<div class=\"flex items-start space-x-3\">\n\t\t\t\t\t\t\t\t<div class=\"flex-shrink-0\">\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tonclick=\"toggleStar(${article.id})\"\n\t\t\t\t\t\t\t\t\t\tclass=\"text-gray-400 hover:text-yellow-500 ${article.is_starred ? 'text-yellow-500' : ''}\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<svg class=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n\t\t\t\t\t\t\t\t\t\t\t<path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\"></path>\n\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"flex-1 min-w-0\">\n\t\t\t\t\t\t\t\t\t<div class=\"flex items-center space-x-2\">\n\t\t\t\t\t\t\t\t\t\t<h3 class=\"text-sm font-medium text-gray-900 dark:text-white\">\n\t\t\t\t\t\t\t\t\t\t\t<a href=\"${article.link}\" target=\"_blank\" class=\"hover:underline\">${article.title}</a>\n\t\t\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t\t\t${article.is_read ? '<span class=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-green-100 text-green-800\">Read</span>' : ''}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<p class=\"mt-1 text-sm text-gray-500 dark:text-gray-400 line-clamp-2\">${article.description || ''}</p>\n\t\t\t\t\t\t\t\t\t\t<div class=\"mt-2 flex items-center space-x-4 text-xs text-gray-500 dark:text-gray-400\">\n\t\t\t\t\t\t\t\t\t\t\t${article.author ? '<span>By ' + escapeHtml(article.author) + '</span>' : ''}\n\t\t\t\t\t\t\t\t\t\t\t${article.published_at ? '<span>' + new Date(article.published_at).toLocaleDateString() + '</span>' : ''}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t`).join('');\n\t\t\t\t}\n\n\t\t\t\t// Select feed\n\t\t\t\tfunction selectFeed(feedId) {\n\t\t\t\t\tloadArticles(feedId);\n\t\t\t\t}\n\n\t\t\t\t// Toggle star\n\t\t\t\tasync function toggleStar(articleId) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst response = await fetch(`/rss/articles/${articleId}/star`, {\n\t\t\t\t\t\t\tmethod: 'PUT'\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (response.ok) {\n\t\t\t\t\t\t\tloadArticles(); // Reload articles to show updated state\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error('Error toggling star:', error);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Refresh feeds\n\t\t\t\tasync function refreshFeeds() {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst response = await fetch('/rss/feeds/refresh', {\n\t\t\t\t\t\t\tmethod: 'POST'\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (response.ok) {\n\t\t\t\t\t\t\tloadFeeds();\n\t\t\t\t\t\t\tloadArticles();\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error('Error refreshing feeds:', error);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Edit feed modal controls\n\t\t\t\tfunction openEditFeedModal(feedId) {\n\t\t\t\t\tconst modal = document.getElementById('edit-feed-modal');\n\t\t\t\t\tconst feed = (window._feeds || []).find(f => f.id === feedId);\n\t\t\t\t\tif (!feed) return;\n\t\t\t\t\tdocument.getElementById('edit-feed-id').value = feed.id;\n\t\t\t\t\tdocument.getElementById('edit-feed-title').value = feed.title || '';\n\t\t\t\t\tdocument.getElementById('edit-fetch-interval').value = feed.fetch_interval || 3600;\n\t\t\t\t\tdocument.getElementById('edit-enabled').checked = !!feed.enabled;\n\t\t\t\t\tmodal.classList.remove('hidden');\n\t\t\t\t}\n\n\t\t\t\tfunction closeEditFeedModal() {\n\t\t\t\t\tdocument.getElementById('edit-feed-modal').classList.add('hidden');\n\t\t\t\t}\n\n\t\t\t\t// Submit edit feed\n\t\t\t\tdocument.addEventListener('submit', async function(e) {\n\t\t\t\t\tif (e.target && e.target.id === 'edit-feed-form') {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tconst id = parseInt(document.getElementById('edit-feed-id').value);\n\t\t\t\t\t\tconst title = document.getElementById('edit-feed-title').value;\n\t\t\t\t\t\tconst fetchInterval = parseInt(document.getElementById('edit-fetch-interval').value);\n\t\t\t\t\t\tconst enabled = document.getElementById('edit-enabled').checked;\n\t\t\t\t\t\tconst payload = { title, fetch_interval: fetchInterval, enabled };\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst response = await fetch(`/rss/feeds/${id}`, {\n\t\t\t\t\t\t\t\tmethod: 'PUT',\n\t\t\t\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\t\t\t\t\tbody: JSON.stringify(payload),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (response.ok) {\n\t\t\t\t\t\t\t\tcloseEditFeedModal();\n\t\t\t\t\t\t\t\tloadFeeds();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\talert('Failed to update feed');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tconsole.error('Error updating feed:', err);\n\t\t\t\t\t\t\talert('Failed to update feed');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Delete feed\n\t\t\t\tasync function deleteFeed(feedId) {\n\t\t\t\t\tif (!confirm('Are you sure you want to delete this feed?')) return;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst resp = await fetch(`/rss/feeds/${feedId}`, { method: 'DELETE' });\n\t\t\t\t\t\tif (resp.status === 204) {\n\t\t\t\t\t\t\tloadFeeds();\n\t\t\t\t\t\t\tloadArticles();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\talert('Failed to delete feed');\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tconsole.error('Error deleting feed:', err);\n\t\t\t\t\t\talert('Failed to delete feed');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t</script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = layouts.BaseLayout(layouts.BaseLayoutProps{
			Title:       "The Ark - RSS Reader",
			Description: "Personal RSS feed reader",
		}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
