package navigation

import (
	"the-ark/internal/auth"
	"the-ark/views/components/button"
	"the-ark/views/components/theme-toggle"
)

type Props struct {
	User *auth.User
	ActivePage string // "dashboard", "uptime", "server", "ssl", "logs"
}

templ Navigation(props Props) {
	<nav class="w-64 bg-white dark:bg-gray-800 shadow-lg transition-colors duration-200 sticky top-0 h-[100dvh]">
		<div class="p-6">
			<div class="flex items-center justify-between">
				<h1 class="text-2xl font-bold text-gray-900 dark:text-white">The Ark</h1>
				@themetoggle.ThemeToggle(themetoggle.Props{})
			</div>
			if !props.User.IsAnonymous() {
				<div class="mt-4 p-3 bg-gray-50 dark:bg-gray-700 rounded-lg border-0 dark:border-gray-600">
					<div class="text-sm font-medium text-gray-900 dark:text-white">{ props.User.Name }</div>
					<div class="text-sm text-gray-500 dark:text-gray-300">{ props.User.Email }</div>
				</div>
			}
		</div>
		
		<ul class="px-4 space-y-2">
			<li>
				<a href="/" class={ getNavLinkClass(props.ActivePage == "dashboard") }>
					Dashboard
				</a>
			</li>
			<li>
				<a href="/uptime" class={ getNavLinkClass(props.ActivePage == "uptime") }>
					Uptime Monitor
				</a>
			</li>
			<li>
				<a href="/rss" class={ getNavLinkClass(props.ActivePage == "rss") }>
					RSS Reader
				</a>
			</li>
			<li>
				<a href="/server" class={ getNavLinkClass(props.ActivePage == "server") }>
					Server Monitoring
				</a>
			</li>
			<li>
				<a href="/ssl" class={ getNavLinkClass(props.ActivePage == "ssl") }>
					SSL Tracker
				</a>
			</li>
			<li>
				<a href="/logs" class={ getNavLinkClass(props.ActivePage == "logs") }>
					Log Viewer
				</a>
			</li>
		</ul>
		
		if !props.User.IsAnonymous() {
			<div class="absolute bottom-0 w-64 p-4">
				@button.Button(button.Props{
					Variant: button.VariantOutline,
					Size: button.SizeSm,
					Class: "w-full border-gray-600 dark:border-gray-600 text-gray-900 dark:text-white",
					Attributes: templ.Attributes{
						"hx-post": "/auth/logout",
						"hx-target": "body",
					},
				}) {
					Logout
				}
			</div>
		}
	</nav>
}

func getNavLinkClass(isActive bool) string {
	if isActive {
		return "flex items-center px-3 py-2 text-sm font-medium text-blue-600 bg-blue-50 dark:bg-blue-900/20 dark:text-blue-400 rounded-lg"
	}
	return "flex items-center px-3 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg"
} 